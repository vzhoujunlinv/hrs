<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhou.dao.EmployeeDao">
	<!--设置model类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致！column和数据库对应 -->
	<resultMap id="EmployeeResultMap" type="com.zhou.model.Employee">
		<id column="eNo" property="eNo" jdbcType="VARCHAR" />
		<result column="ePwd" property="ePwd" jdbcType="VARCHAR" />
		<result column="eName" property="eName" jdbcType="VARCHAR" />
		<result column="eSex" property="eSex" jdbcType="INTEGER" />
		<result column="eDepartment" property="eDepartment" jdbcType="VARCHAR" />
		<result column="eTitle" property="eTitle" jdbcType="VARCHAR" />
		<result column="eTele" property="eTele" jdbcType="VARCHAR" />
		<result column="eMail" property="eMail" jdbcType="VARCHAR" />
		<result column="eBasicSalary" property="eBasicSalary" jdbcType="INTEGER" />
	</resultMap>
	<!-- 由员工编号查询-->
	<select id="selectEmpById" parameterType="String" resultMap="EmployeeResultMap">

		SELECT * FROM employee WHERE eNo like CONCAT('%',#{eNo},'%')
	</select>
	<!-- 由部门查询-->
	<select id="selectEmpByDep" parameterType="String" resultMap="EmployeeResultMap">
			SELECT * FROM employee WHERE eDepartment=#{eDepartment}
	</select>
	<!-- 查询所有员工 -->
	<select id="findAllEmp" resultMap="EmployeeResultMap">
		SELECT * FROM employee 
	</select>
	<!-- 添加员工 -->
	<insert id="saveEmp" parameterType="com.zhou.model.Employee" >
		insert into employee(eNo,eName,eSex,eDepartment,eTitle,eTele,eMail,ePwd) values (#{eNo},#{eName},#{eSex},#{eDepartment},#{eTitle},#{eTele},#{eMail},#{ePwd})
	</insert>
	<!-- 修改员工资料 -->

	<update id="updateEmp" parameterType="com.zhou.model.Employee">
		update employee 
		<set>
			<if test="eDepartment != null"> 
				eDepartment=#{eDepartment}
			</if>
			<if test="eTitle != null"> 
				,eTitle=#{eTitle}
			</if>
			<if test="eTele != null"> 
				,eTele=#{eTele}
			</if>
			<if test="eMail != null"> 
				,eMail=#{eMail} 
			</if>
		</set>
		where eNo=#{eNo}
	</update>
	<!-- 修改员工密码 -->
	<update id="updatePwd" parameterType="com.zhou.model.Employee">
		 update employee set ePwd=#{ePwd} where eNo=#{eNo}
	</update>
	<!-- 修改基本薪资 -->
	<update id="updateBs" parameterType="com.zhou.model.Employee">
		 update employee set eBasicSalary=#{eBasicSalary} where eNo=#{eNo}
	</update>

	<delete id="deleteEmp" parameterType="String">
	 	delete from employee where eNo=#{eNo}  
	</delete>
</mapper>