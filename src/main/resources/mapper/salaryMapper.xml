<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhou.dao.SalaryDao">
	<!--设置model类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致！column和数据库对应 -->
	<resultMap id="SalaryResultMap" type="com.zhou.model.Salary">
		<id column="sId" property="sId" jdbcType="INTEGER" />
		<result column="sNo" property="sNo" jdbcType="VARCHAR" />
		<result column="sName" property="sName" jdbcType="VARCHAR" />
		<result column="sBasic" property="sBasic" jdbcType="INTEGER" />
		<result column="sLeaveNo" property="sLeaveNo" jdbcType="INTEGER" />
		<result column="sOvertimeNo" property="sOvertimeNo" jdbcType="INTEGER" />
		<result column="sReal" property="sReal" jdbcType="INTEGER" />

		<result column="sDate" property="sDate" jdbcType="VARCHAR" />
		<result column="sBeizhu" property="sBeizhu" jdbcType="VARCHAR" />	
		<association property="employee" javaType="com.zhou.model.Employee" resultMap="EmployeeResultMap" />
	</resultMap>
	<resultMap id="EmployeeResultMap" type="com.zhou.model.Employee" >
		<id column="eId" property="eId" jdbcType="INTEGER" />
		<result column="eNo" property="eNo" jdbcType="VARCHAR" />
		<result column="dId" property="eDepartment" jdbcType="INTEGER" />
		<result column="eDepartment" property="eDepartment" jdbcType="VARCHAR" />
		<result column="eTitle" property="eTitle" jdbcType="VARCHAR" />	
	</resultMap>
	
	<resultMap id="LeaveResultMap" type="com.zhou.model.Leave">
		<id column="lId" property="lId" jdbcType="INTEGER" />
		<result column="lNo" property="lNo" jdbcType="VARCHAR" />	
	</resultMap>
	
	<resultMap id="OvertimeResultMap" type="com.zhou.model.Overtime">
		<id column="oId" property="oId" jdbcType="INTEGER" />
		<result column="oNo" property="oNo" jdbcType="VARCHAR" />	
	</resultMap>	
	
	<resultMap id="DetailedSalaryResultMap" type="com.zhou.model.SalaryDetail">
		<id column="eNo" property="eNo" jdbcType="VARCHAR" />
		<result column="lno" property="lno" jdbcType="INTEGER" />
		<result column="ono" property="ono" jdbcType="INTEGER" />
		<result column="minus" property="minus" jdbcType="INTEGER" />
		<result column="plus" property="plus" jdbcType="INTEGER" />
		<association property="leave" javaType="com.zhou.model.Leave" resultMap="LeaveResultMap" />	
		<association property="overtime" javaType="com.zhou.model.Overtime" resultMap="OvertimeResultMap" />		
	</resultMap>
	
	
	<!-- 添加薪资 -->
	<insert id="AddSal" parameterType="com.zhou.model.Salary" >
		insert into salary(sNo,sName,sBasic,sLeaveNo,sOvertimeNo,sReal,sDate,sBeizhu)
        values (#{sNo},#{sName},#{sBasic},#{sLeaveNo},#{sOvertimeNo},#{sReal},#{sDate},#{sBeizhu})
	</insert>

	<!-- 计算薪资 -->
	<select id="ComputeSal" parameterType="Integer" resultMap="SalaryResultMap">

		SELECT employee.eNo as sNo,employee.eName as sName,employee.eBasicSalary as sBasic,count(distinct l.lId) as sLeaveNo ,count(distinct o.oId) as sOvertimeNo ,employee.eBasicSalary+(count(distinct o.oId)-count(distinct l.lId))*100 as sReal,now() as sDate 
		FROM  employee left join `leave` as l on l.lNo=employee.eNo left join overtime as o on o.oNo=employee.eNo 
		where employee.dId=#{eDepartment}
		GROUP BY employee.eNo,employee.eName,employee.eBasicSalary
	</select>
	
	<!-- 查询薪资 -->
	<select id="SearchSal" resultMap="SalaryResultMap">
		SELECT * FROM salary;
	</select>
	
	<!-- 得到薪资信息列表 -->
	<select id="GetSalaryList" parameterType="String" resultMap="SalaryResultMap">
		SELECT salary.sNo
                      ,salary.sName
                      ,employee.eDepartment
                      ,employee.eTitle
                      ,sDate
                      ,sBasic
                      ,sReal
                      ,sDate
                      ,sBeizhu
        FROM salary join employee on salary.sNo=employee.eNo         
        where  employee.eNo like '%${value}%'              
	</select>
	
	<!-- 根据部门得到薪资信息列表 -->
	<select id="GetSalaryByDep" parameterType="com.zhou.model.Employee" resultMap="SalaryResultMap">
		SELECT salary.sNo
                      ,salary.sName
                      ,employee.eDepartment
                      ,employee.eTitle
                      ,sDate
                      ,sBasic
                      ,sReal
                      ,sDate
                      ,sBeizhu
        FROM salary join employee on salary.sNo=employee.eNo         
        where employee.eDepartment=#{eDepartment}              
	</select>
	
	<!--获取一条薪资的细节-->
	<select id="GetSalaryDetail" parameterType="String" resultMap="DetailedSalaryResultMap">
		SELECT employee.eNo,
		count(distinct l.lId) as lno,
		count(distinct overtime.oId) as ono,
		count(distinct l.lId)*100 as minus,
		count(distinct overtime.oId)*100 as plus 
		FROM  employee left outer join overtime on overtime.oNo=employee.eNo left outer join `leave` as l on employee.eNo=l.lNo 
        where  employee.eNo like '%${value}%'
		GROUP BY employee.eNo
	</select>


</mapper>